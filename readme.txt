##### MobileNet V3 ########

Для этого проекта мы создали 2 версии архитектуры MobileNetV3 - small и large.

Проект был сделан в соответствии с данным документом (пдф данного файла есть в directory):
https://arxiv.org/abs/1905.02244
(@Google AI, 2019)

- Кратко о версиях MobileNet
- Инструкция по запуску тестового скрипта
- Описать возможные улучшения созданного решения




КРАТКО О ВЕРСИЯХ MOBILENET
~~~~~~~~~~~~~~~~~~~~~~~~~~
Для начала, нам пришлось изучить архитектуры 1й и 2й версии. Мы кратко расскажем о них тут:

MobileNetV1 - рисерчеры из гугла ввели понятие depthwise и pointwise convolution layer.
Разница этих 2х слоев от стандартных сверхточных слоев состоит в том, что depthwise layer принимает по 1 каналу в одно время и ищет связи и паттерны в этом канале (Dk*Dk*1, где Dk это ширина и длина рецептурного поля), независимо от других. Pointwise изучает как каждый индивидуальный пиксель между всеми каналами взаимсвязан с другими (1*1*m, где m-количество каналов). Используя эти 2 слоя в связке, мы получаем архитектуру слоя, которая будет в 8/9 раз быстрее стандартного сверточного слоя. (К слову его параметры будут Dk*Dk*m).
В крации мы разделили пространственный фильтр (spatial filtering) от механизма создания карт признаков (fearure generation mechanism)
(mhttps://arxiv.org/abs/1704.04861)
(@Google Inc. 2017)

MobileNetV2 - ввела поняти linear bottleneck и inverted residual. Каждый блок сосотит из узкого входа и выхода данных (они не содержат нелинейностей), за которыми следует расширение (expansion) в более многомерное пространство.
Эту архитектуру можно увидеть в документе о MobileNetV3 Figure 3.

MobileNetV3 - это доработана 2я версия MobileNet. 3я версия во многом была создана благодаря технологии Platform-Aware NAS for Blockwise Search. Насколько мы поняли это есть   RNN которая смогла оптимизировать архитектуру слоев под выбранную нами задачу. В 3й версии есть 3 главных "апгрейда": 
1) "Дорогие" слои были переделанны. Во-первых, во второй версии inverted bottleneck использовали 1*1 сверхточный слой как последние слой, для того чтобы расширить данные в многомерную карту признаков (higher-dimensional feature space). Чтоби избежать излишних вычеслительных нагрузок, мы переносим этот слой за финальный average pooling. Последние вычисления будут в резолюции 1*1 вместо 7*7.
Так-же было замечено что можно снизить количество фильтров с помощью hard-swish. С 32 под ReLU, до 16 под h-swish.
2) Для избежания нелинейности, функция сигмоида была упрощена с помощью hard-sigmoid 5.2.1, и соответственно swish была заменена на hard-swish.
3) Более того мы сделали размер squaaze and excite block стабильным (по 1/4 от количества каналов) 





ИНСТРУКЦИЯ ПО ЗАПУСКУ ТЕСТОВОГО СКРИПТА
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1) Нужно создать тестовый environment в anaconda, и установить нужные пакеты с помощью команды:
 	pip install -r requirements.txt
2) Затем нужно запустит главный файл с помощью:
	python main.py





ОПИСАТЬ ВОЗМОЖНЫЕ УЛУЧШЕНИЯ СОЗДАННОГО РЕШЕНИЯ
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

К большому сожалению, данный проект не является идеалом скрипта, который хотелось написать. 3 главных аспекта в которое хотелось доработать в будущем времени, это: 
1) Создать более гармоничный main.py файл, где многие алгоритмы (загрузки и получения базы данных CIFAR10, тестирования, валидации, и визуализации и тп) будут иметь свои собственные функции. (На этот процесс не хватило времени, так как в основном свои работы я провожу в jupyter notebook, и весь данный проект тоже был выполнен в нем, и собран в 1 файл)
2) Получить какие-то реальные результаты с помощью более мощной машины и GPU.
(Я работаю на MacBookPro 2012 года выпуска, без видеокарты)
3) Хотелось бы оптимизировать 2 архитектуры MobilebNetV3 large и Small в 1 единый класс.


Данный проект в целом был новым и интересным испытанием для меня. Например, воссоздание сверхточной нейронной сети напрямую с research paper. 
В целом я очень придирчив к своей работе и привык доводить проекты до идеала. Мне бы очень хотелось продемонстрировать свои навыки на практике в вашей команде. 
Если вас заинтересует, я мог бы доработать данное техническое задание на более мощном компьютере, и напасть более элегантный скрипт. 

Жду вашего фидбека, 
С уважением,
Диас